{"ast":null,"code":"var _jsxFileName = \"/home/spiritus/devx/practice/SimpleML-App/front/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      var formData = this.state.formData;\n      formData[name] = value;\n      this.setState({\n        formData\n      });\n    };\n\n    this.handlePredictClick = event => {\n      const formData = this.state.formData;\n      this.setState({\n        isLoading: true\n      });\n      fetch('http://127.0.0.1:5000/prediction/', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(formData)\n      }).then(response => response.json()).then(response => {\n        this.setState({\n          result: response.result,\n          isLoading: false\n        });\n      });\n    };\n\n    this.hancleCancelClick = event => {\n      this.setState({\n        result: \"\"\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      formData: {\n        textfield1: '',\n        textfield2: '',\n        select1: 1,\n        select2: 1,\n        select3: 1\n      },\n      result: \"\"\n    };\n  }\n\n  render() {\n    const isLoading = this.state.isLoading;\n    const formData = this.state.formData;\n    const result = this.state.result;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"ML template App\")), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Text Field 1\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Text Field 1\",\n      name: \"textfield1\",\n      value: formData.textfield1,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Text Field 2\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Text Field 2\",\n      name: \"textfield2\",\n      value: formData.textfield2,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Select 1\"), React.createElement(Form.Control, {\n      as: \"select\",\n      value: formData.select1,\n      name: \"select1\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"4\"))), React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Select 2\"), React.createElement(Form.Control, {\n      as: \"select\",\n      value: formData.select2,\n      name: \"select2\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"4\"))), React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Select 3\"), React.createElement(Form.Control, {\n      as: \"select\",\n      value: formData.select3,\n      name: \"select3\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"4\")))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Button, {\n      block: true,\n      variant: \"success\",\n      disabled: isLoading,\n      onClick: !isLoading ? this.handlePredictClick : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, isLoading ? \"Making prediction\" : \"Predict\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"block variant=\\\"danger\\\" disabled=\", isLoading, \"onClick=\", this.hancleCancelClick, \"> Reset prediction\")))), result === \"\" ? null : React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"result-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      id: \"result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, result)))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/spiritus/devx/practice/SimpleML-App/front/src/App.js"],"names":["React","Component","Form","Col","Container","Row","Button","App","constructor","props","handleChange","event","value","target","name","formData","state","setState","handlePredictClick","isLoading","fetch","headers","method","body","JSON","stringify","then","response","json","result","hancleCancelClick","textfield1","textfield2","select1","select2","select3","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: false,\n            formData: {\n                textfield1: '',\n                textfield2: '',\n                select1: 1,\n                select2: 1,\n                select3: 1,\n            },\n            result: \"\"\n        };\n    }\n\n    handleChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n        var formData = this.state.formData;\n        formData[name] = value;\n        this.setState({\n            formData\n        });\n    }\n\n    handlePredictClick = (event) => {\n        const formData = this.state.formData;\n        this.setState({ isLoading: true });\n        fetch('http://127.0.0.1:5000/prediction/',\n         {\n             headers: {\n                 'Accept': 'application/json',\n                 'Content-Type': 'application/json'\n             },\n             method: 'POST',\n             body: JSON.stringify(formData)\n         }).then(response => response.json())\n         .then(response => {\n             this.setState({\n                 result: response.result,\n                 isLoading: false\n             });\n         });\n\n    }\n\n    hancleCancelClick = (event) => {\n        this.setState({ result: \"\"});\n    }\n\n    render() {\n        const isLoading = this.state.isLoading;\n        const formData = this.state.formData;\n        const result = this.state.result;\n\n        return (\n            <Container>\n                <div>\n                    <h1 className=\"title\">ML template App</h1>\n                </div>\n                <div className=\"content\">\n                    <Form>\n                        <Form.Row>\n                            <Form.Group as={Col}>\n                                <Form.Label>Text Field 1</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Text Field 1\"\n                                    name=\"textfield1\"\n                                    value={formData.textfield1}\n                                    onChange={this.handleChange} />\n                            </Form.Group>\n                            <Form.Group as={Col}>\n                                <Form.Label>Text Field 2</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Text Field 2\"\n                                    name=\"textfield2\"\n                                    value={formData.textfield2}\n                                    onChange={this.handleChange} />\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col}>\n                                <Form.Label>Select 1</Form.Label>\n                                <Form.Control\n                                    as=\"select\"\n                                    value={formData.select1}\n                                    name=\"select1\"\n                                    onChange={this.handleChange}>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                    </Form.Control>\n                            </Form.Group>\n                            <Form.Group as={Col}>\n                                <Form.Label>Select 2</Form.Label>\n                                <Form.Control\n                                    as=\"select\"\n                                    value={formData.select2}\n                                    name=\"select2\"\n                                    onChange={this.handleChange}>\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group as={Col}>\n                                <Form.Label>Select 3</Form.Label>\n                                <Form.Control\n                                    as=\"select\"\n                                    value={formData.select3}\n                                    name=\"select3\"\n                                    onChange={this.handleChange}>\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                </Form.Control>\n                            </Form.Group>\n                        </Form.Row>\n                        <Row>\n                            <Col>\n                                <Button\n                                    block\n                                    variant=\"success\"\n                                    disabled={isLoading}\n                                    onClick={!isLoading ? this.handlePredictClick : null}>\n                                    { isLoading ? \"Making prediction\" : \"Predict\"}\n                                </Button>\n                            </Col>\n                            <Col>\n                                <Button>\n                                    block\n                                    variant=\"danger\"\n                                    disabled={isLoading}\n                                    onClick={this.hancleCancelClick}>\n                                    Reset prediction\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Form>\n                    {result === \"\" ? null :\n                        (<Row>\n                            <Col className=\"result-container\">\n                                <h5 id=\"result\">{result}</h5>\n                            </Col>\n                        </Row>)\n                    }\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}